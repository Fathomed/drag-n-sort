{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/ap-dragsort.js"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "// used on Angler's Planet image gallery drag and sort\ndocument.addEventListener('DOMContentLoaded', () => {\n  const sortableList = document.querySelector('.file-list-holder');\n\n  // Function to initialize drag events on items\n  const initializeDragEvents = (item) => {\n    item.addEventListener('dragstart', (e) => {\n      e.target.classList.add('dragging');\n    });\n\n    item.addEventListener('dragend', (e) => {\n      e.target.classList.remove('dragging');\n    });\n  };\n\n  // Function to handle dragover event\n  const handleDragOver = (e) => {\n    e.preventDefault();\n    const draggingItem = document.querySelector('.dragging');\n    if (!draggingItem) return;\n\n    const siblings = Array.from(sortableList.querySelectorAll('.file-item-gallery:not(.dragging)'));\n    const nextSibling = siblings.find(\n      (sibling) => e.clientY <= sibling.getBoundingClientRect().top + sibling.offsetHeight / 2\n    );\n\n    if (nextSibling) {\n      sortableList.insertBefore(draggingItem, nextSibling);\n    } else {\n      sortableList.appendChild(draggingItem);\n    }\n  };\n\n  // Initialize drag events on existing items\n  const initializeExistingItems = () => {\n    document.querySelectorAll('.file-item-gallery').forEach(initializeDragEvents);\n  };\n\n  // Handle the addition of new items\n  const observer = new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      mutation.addedNodes.forEach((node) => {\n        if (node.nodeType === Node.ELEMENT_NODE && node.classList.contains('file-item-gallery')) {\n          initializeDragEvents(node);\n        }\n      });\n    });\n  });\n\n  observer.observe(sortableList, { childList: true });\n\n  // Event listeners for sortable list\n  sortableList.addEventListener('dragover', handleDragOver);\n  sortableList.addEventListener('dragenter', (e) => e.preventDefault());\n\n  // Initial setup\n  initializeExistingItems();\n});\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACC7F,WAAS,iBAAiB,oBAAoB,MAAM;AAClD,UAAM,eAAe,SAAS,cAAc,mBAAmB;AAG/D,UAAM,uBAAuB,CAAC,SAAS;AACrC,WAAK,iBAAiB,aAAa,CAAC,MAAM;AACxC,UAAE,OAAO,UAAU,IAAI,UAAU;AAAA,MACnC,CAAC;AAED,WAAK,iBAAiB,WAAW,CAAC,MAAM;AACtC,UAAE,OAAO,UAAU,OAAO,UAAU;AAAA,MACtC,CAAC;AAAA,IACH;AAGA,UAAM,iBAAiB,CAAC,MAAM;AAC5B,QAAE,eAAe;AACjB,YAAM,eAAe,SAAS,cAAc,WAAW;AACvD,UAAI,CAAC;AAAc;AAEnB,YAAM,WAAW,MAAM,KAAK,aAAa,iBAAiB,mCAAmC,CAAC;AAC9F,YAAM,cAAc,SAAS;AAAA,QAC3B,CAAC,YAAY,EAAE,WAAW,QAAQ,sBAAsB,EAAE,MAAM,QAAQ,eAAe;AAAA,MACzF;AAEA,UAAI,aAAa;AACf,qBAAa,aAAa,cAAc,WAAW;AAAA,MACrD,OAAO;AACL,qBAAa,YAAY,YAAY;AAAA,MACvC;AAAA,IACF;AAGA,UAAM,0BAA0B,MAAM;AACpC,eAAS,iBAAiB,oBAAoB,EAAE,QAAQ,oBAAoB;AAAA,IAC9E;AAGA,UAAM,WAAW,IAAI,iBAAiB,CAAC,cAAc;AACnD,gBAAU,QAAQ,CAAC,aAAa;AAC9B,iBAAS,WAAW,QAAQ,CAAC,SAAS;AACpC,cAAI,KAAK,aAAa,KAAK,gBAAgB,KAAK,UAAU,SAAS,mBAAmB,GAAG;AACvF,iCAAqB,IAAI;AAAA,UAC3B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAED,aAAS,QAAQ,cAAc,EAAE,WAAW,KAAK,CAAC;AAGlD,iBAAa,iBAAiB,YAAY,cAAc;AACxD,iBAAa,iBAAiB,aAAa,CAAC,MAAM,EAAE,eAAe,CAAC;AAGpE,4BAAwB;AAAA,EAC1B,CAAC;",
  "names": []
}
